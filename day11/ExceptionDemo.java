
/*
异常就是不正常。生活中也有很多不太正常的情况发生。
在写程序的时候，尽量避免不正常的发生。（比如，为了防止感冒，家里先备药。上班塞车）

如果感冒了，吃药、去医院、多喝水

正常流程代码 和 问题处理代码结合很紧密

对常见的问题用面向对象的方式，对其 进行描述、封装

java 万物皆是对象，所以，问题也是对象。对象成员包括，问题名字，问题信息，发出位置。拿到问题对象，就拿到了这些信息。

异常：是在【运行】时期发生的不正常情况。。


在java中用类的形式对不正常情况进行了描述和封装对象。

描述不正常的情况的类，就称为异常类。 

以前正常流程代码和问题处理代码相结合，
现在将正常流程代码和问题处理代码分离。提高阅读性.


其实异常就是java通过面向对象的思想将问题封装成了对象.

用异常类对其进行描述。
不同的问题（问题名字，问题信息，发出位置 不同）用不同的类进行具体的描述。 比如角标越界。空指针等等。

问题很多，意味着描述的类也很多，
将其共性进行向上抽取，形成了异常体系。

最终问题（不正常情况）就分成了两大类。
Throwable是错误和异常 的父类，父类 下面分两大派
Throwable:无论是error，还是异常，问题，问题发生就应该可以抛出，让调用者知道并处理。
			//该体系的特点就在于Throwable及其所有的子类都具有可抛性。
			可抛性到底指的是什么呢？怎么体现可抛性呢？
			其实是通过两个关键字来体现的。
			throws throw ,凡是可以被这两个关键字所操作的类和对象都具备可抛性.
	|--1，一般不可处理的。Error（用Error类来表示）
			特点：是由jvm抛出的严重性的问题。这种问题处理不了，严重影响到程序的执行。
				 这种问题发生一般不针对性处理。直接修改程序
	|--2，可以处理的。Exception（发生异常我们可以进行针对性处理）

疾病可分两种，可治愈( 感冒、发烧 类似 异常) 和不可治愈（非典  error）

该体系的特点：
	子类的后缀名都是用其父类名作为后缀，阅读性很好。
*/
 
class ExceptionDemo 
{
	public static void main(String[] args) 
	{
		int[] arr = new int[1024*1024*800];//java.lang.OutOfMemoryError: Java heap space
//		arr = null;
//		System.out.println(arr[3]);
//
//
//		sleep(-5);
	}


	public static void sleep2(int time)
	{
		if(time<0)//问题处理代码,为了保证程序的健壮性
		{
//			处理办法。
//			处理办法。
//			处理办法。
//			处理办法。
//			处理办法。
		}
		if(time>100000)
		{
//			处理办法。
//			处理办法。
//			处理办法。
//			处理办法。
//			处理办法。
//			处理办法。
		}
		System.out.println("我睡。。。"+time);//正常流程代码 和 

//		sleep(-5);
	}
	public static void sleep(int time)
	{
		if(time<0)
		{
//			抛出 new FuTime();//就代码着时间为负的情况，这个对象中会包含着问题的名称，信息，位置等信息。
		}
		if(time>100000)
		{
//			抛出 new BigTime();
		}
		System.out.println("我睡。。。"+time);
	}
}
/*
class FuTime
{
}
class BigTime
{
}
*/